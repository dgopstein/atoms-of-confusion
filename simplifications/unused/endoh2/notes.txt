atoms:
 - Order of preprocessor steps. Which happens first? Macro evaluation or comment stripping?
   - Is there a case where it matters? It matters because #define/*asfd*/ wouldn't compile if comments weren't removed first
 - Arithmetic on string literal: ("abc"+0) (0080)
 - preprocessor directives inside statements(0050)
 - lots of code in a small space (many operations in a single expression) (0110)
 - redundant self-assignment (a = a;) (0150)
 - comma in assignment (a = 1, 2;) (0160)
 - nested ifs that could be combined into a single predicate
 - performing logical test against pre-updated value (a++ == 126) vs (a++, a == 127)

transformations
0010: normalize the code - remove comments and rename identifiers
0020: run clang-format
0030: add explicit curly braces
0040: remove redundant semicolon
0050: remove defines from inside other statements
0060: replace for with while
0070: merge concatenated strings
0080: remove identity addition
0090: replace ascii codes with characters
0100: move irrelevant for initialization
0110: move large compound expression to procedure so it can be broken up
0120: add parens
0130: replace commas with semicolons
0140: ternary to if
0150: remove redundant branch
0160: factor comma out of assignment
0170: solve arithmetic
0180: ternary to if
0190: remove redundant branch
0200: move assignment from predicate
0210: replace macro with contents
0220: simplify expression
0230: replace repeated expression with variable
0240: factor common elements from ternary operator
0250: split separate macros
0260: add parens
0270: remove redundant assignment
0280: ternary to if
0290: replace comma with semicolon
0300: ternary to if
0310: ternary to if
0320: replace comma with semicolon
0330: remove redundant branch
0340: combine conditions
0350: split out pre-increment
0360: ternary to if
0370: replace comma with semicolon
0380: replace ascii with character
0390: post-increment to pre-increment
0400: factor out expression to variable
0410: parens
0420: octal to decimal

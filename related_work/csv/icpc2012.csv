2012,Agile software assessment (Invited paper),"Nierstrasz, O. ; Lungu, M.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240507,"Informed decision making is a critical activity in software development, but it is poorly supported by common development environments, which focus mainly on low-level programming tasks. We posit the need for agile software assessment, which aims to support decision making by enabling rapid and effective construction of software models and custom analyses. Agile software assessment entails gatheri..."
2012,Studying developers for fun and profit: (Keynote abstract),"DeLine, Robert",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240478,"Summary form only given. NCsoft Corporation is a leading global developer and publisher of online games. Founded in 1997 by Taek Jin Kim, NCsoft is home to the critically acclaimed Aion, Lineage, Guild Wars, City of Heroes franchises and numerous Casual Games. With offices in North America, United Kingdom, Japan, Taiwan and Thailand, NCsoft aims at providing fun to everyone, everywhere in the worl..."
2012,A retrospective view on: The role of concepts in program comprehension: (MIP award),"Rajlich, V. ; Wilde, N.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240480,"This retrospective briefly recapitulates highlights of the original paper that was published at IWPC 2002. Then it overviews research directions of the last 10 years: research in tools and techniques of concept location a that aim to support software developer, research of integrated model of software change, creation of software engineering course that emphasizes the role of software developer in..."
2012,Program complexity metrics and programmer opinions,"Katzmarski, B. ; Koschke, R.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240486,Various program complexity measures have been proposed to assess maintainability. Only relatively few empirical studies have been conducted to back up these assessments through empirical evidence. Researchers have mostly conducted controlled experiments or correlated metrics with indirect maintainability indicators such as defects or change frequency. This paper uses a different approach. We inves...
2012,Women and men — Different but equal: On the impact of identifier style on source code reading,"Sharafi, Z. ; Soh, Z. ; Gueheneuc, Y. ; Antoniol, G.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240505,"Program comprehension is preliminary to any program evolution task. Researchers agree that identifiers play an important role in code reading and program understanding activities. Yet, to the best of our knowledge, only one work investigated the impact of gender on the memorability of identifiers and thus, ultimately, on program comprehension. This paper reports the results of an experiment involv..."
2012,A lightweight visualization of interprocedural data-flow paths for source code reading,"Ishio, T. ; Etsuda, S. ; Inoue, K.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240506,"To understand the behavior of a program, developers must read source code fragments in various modules. For developers investigating data-flow paths among modules, a call graph is too abstract since it does not visualize how parameters of method calls are related to each other. On the other hand, a system dependence graph is too fine-grained to investigate interprocedural data-flow paths. In this ..."
2012,Is the derivation of a model easier to understand than the model itself?,"Feigenspan, J. ; Batory, D. ; Riche, T.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240508,"Software architectures can be presented by graphs with components as nodes and connectors as edges. These graphs, or models, typically encode expert domain knowledge, which makes them difficult to understand. Hence, instead of presenting a complete complex model, we can derive it from a simple, easy-to-understand model by a set of easy-to-understand transformations. In two controlled experiments, ..."
2012,Evaluating forum discussions to inform the design of an API critic,"Rupakheti, C.R. ; Daqing Hou",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240509,"Learning to use a software framework and its API (Application Programming Interfaces) can be a major endeavor for novices. To help, we have built a critic to advise the use of an API based on the formal semantics of the API. Specifically, the critic offers advice when the symbolic state of the API client code triggers any API usage rules. To assess to what extent our critic can help solve practica..."
2012,Mining source code descriptions from developer communications,"Panichella, S. ; Aponte, J. ; Di Penta, M. ; Marcus, A. ; Canfora, G.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240510,"Very often, source code lacks comments that adequately describe its behavior. In such situations developers need to infer knowledge from the source code itself or to search for source code descriptions in external artifacts. We argue that messages exchanged among contributors/developers, in the form of bug reports and emails, are a useful source of information to help understanding source code. Ho..."
2012,Measuring programming experience,"Feigenspan, J. ; Kastner, C. ; Liebig, J. ; Apel, S. ; Hanenberg, S.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240511,"Programming experience is an important confounding parameter in controlled experiments regarding program comprehension. In literature, ways to measure or control programming experience vary. Often, researchers neglect it or do not specify how they controlled it. We set out to find a well-defined understanding of programming experience and a way to measure it. From published comprehension experimen..."
2012,High-MCC functions in the Linux kernel,"Jbara, A. ; Matan, A. ; Feitelson, D.G.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240512,"McCabe's Cyclomatic Complexity (MCC) is a widely used metric for the complexity of control flow. Common usage decrees that functions should not have an MCC above 50, and preferably much less. However, the Linux kernel includes more than 800 functions with MCC values above 50, and over the years 369 functions have had an MCC of 100 or more. Moreover, some of these functions undergo extensive evolut..."
2012,Understanding registration-based abstractions: A quantitative user study,"Nunez, J.-J. ; Kiczales, G.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240513,The adoption of programming language innovation is impeded because all program processing tools in the tool chain must support any new or altered language features. Registration-based abstractions (RBAs) were proposed to address this difficulty by allowing the editor to transiently superimpose new language abstractions on existing code. Individual programmers can choose where and when to see a new...
2012,Concern-based cohesion: Unveiling a hidden dimension of cohesion measurement,"Silva, B. ; Sant'Anna, C. ; Chavez, C. ; Garcia, A.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240476,"Cohesion has been avidly recognized as a key property of software modularity. Ideally, a software module is considered to be cohesive if it represents an abstraction of a single concern of the software. Modules with several concerns may be harder to understand because developers must mentally separate the source code related to each concern. Also, modules implementing several concerns are more lik..."
2012,Understanding reuse in the Android Market,"Ruiz, I.J.M. ; Nagappan, M. ; Adams, B. ; Hassan, A.E.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240477,"Mobile apps are software products developed to run on mobile devices, and are typically distributed via app stores. The mobile app market is estimated to be worth billions of dollars, with more than hundred of thousands of apps, and still increasing in number. This explosion of mobile apps is astonishing, given the short time span that they have been around. One possible explanation for this explo..."
2012,Programmer information needs after memory failure,"Parnin, C. ; Rugaber, S.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240479,"Despite its vast capacity and associative powers, the human brain does not deal well with interruptions. Particularly in situations where information density is high, such as during a programming task, recovering from an interruption requires extensive time and effort. Although modern program development environments have begun to recognize this problem, none of these tools take into account the b..."
2012,Identifying computational phases from inter-process communication traces of HPC applications,"Alawneh, L. ; Hamou-Lhadj, A.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240481,"Understanding the behaviour of High Performance Computing (HPC) systems is a challenging task due to the large number of processes they involve as well as the complex interactions among these processes. In this paper, we present a novel approach that aims to simplify the analysis of large execution traces generated from HPC applications. We achieve this through a technique that allows semiautomati..."
2012,Tracking and visualizing information flow in component-based systems,"Yazdanshenas, A.R. ; Moonen, L.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240482,"Component-based software engineering is aimed at managing the complexity of large-scale software development by composing systems from reusable parts. In order to understand or validate the behavior of a given system, one needs to acquire understanding of the components involved in combination with understanding how these components are instantiated, initialized and interconnected in the particula..."
2012,Do static type systems improve the maintainability of software systems? An empirical study,"Kleinschmager, S. ; Hanenberg, S. ; Robbes, R. ; Tanter, E. ; Stefik, A.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240483,"Static type systems play an essential role in contemporary programming languages. Despite their importance, whether static type systems influence human software development capabilities remains an open question. One frequently mentioned argument for static type systems is that they improve the maintainability of software systems - an often used claim for which there is no empirical evidence. This ..."
2012,Professional status and expertise for UML class diagram comprehension: An empirical study,"Soh, Z. ; Sharafi, Z. ; Van den Plas, B. ; Porras, G.C. ; Gueheneuc, Y. ; Antoniol, G.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240484,"Professional experience is one of the most important criteria for almost any job offer in software engineering. Professional experience refers both to professional status (practitioner vs. student) and expertise (expert vs. novice). We perform an experiment with 21 subjects including both practitioners and students, and experts and novices. We seek to understand the relation between the speed and ..."
2012,Modeling the ownership of source code topics,"Corley, C.S. ; Kammer, E.A. ; Kraft, N.A.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240485,"Exploring linguistic topics in source code is a program comprehension activity that shows promise in helping a developer to become familiar with an unfamiliar software system. Examining ownership in source code can reveal complementary information, such as who to contact with questions regarding a source code entity, but the relationship between linguistic topics and ownership is an unexplored are..."
2012,A semantic relatedness approach for traceability link recovery,"Mahmoud, A. ; Nan Niu ; Songhua Xu",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240487,"Human analysts working with automated tracing tools need to directly vet candidate traceability links in order to determine the true traceability information. Currently, human intervention happens at the end of the traceability process, after candidate traceability links have already been generated. This often leads to a decline in the results' accuracy. In this paper, we propose an approach, base..."
2012,Using IR methods for labeling source code artifacts: Is it worthwhile?,"De Lucia, A. ; Di Penta, M. ; Oliveto, R. ; Panichella, A. ; Panichella, S.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240488,"Information Retrieval (IR) techniques have been used for various software engineering tasks, including the labeling of software artifacts by extracting “keywords” from them. Such techniques include Vector Space Models, Latent Semantic Indexing, Latent Dirichlet Allocation, as well as customized heuristics extracting words from specific source code elements. This paper investigates ho..."
2012,"A TraceLab-based solution for creating, conducting, and sharing feature location experiments","Dit, B. ; Moritz, E. ; Poshyvanyk, D.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240489,"Similarly to other fields in software engineering, the results of case studies involving feature location techniques (FLTs) are hard to reproduce, compare, and generalize, due to factors such as, incompatibility of different datasets, lack of publicly available implementation or implementation details, or the use of different metrics for evaluating FLTs. To address these issues, we propose a solut..."
2012,Can clone detection support test comprehension?,"Hauptmann, B. ; Junker, M. ; Eder, S. ; Juergens, E. ; Vaas, R.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240490,"Tests are central artifacts of software systems. Therefore, understanding tests is essential for activities such as maintenance, test automation, and efficient execution. Redundancies in tests may significantly decrease their understandability. Clone detection is a technique to find similar parts in software artifacts. We suggest using this technique to gain a better understanding of tests and to ..."
2012,A controlled experiment on software clones,"Harder, J. ; Tiarks, R.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240491,"Most software systems contain sections of duplicated source code - clones - that are believed to make maintenance more difficult. Recent studies tested this assumption by retrospective analyses of software archives. While giving important insights, the analysis of historical data relies only on snapshots and misses the human interaction in between. We conducted a controlled experiment to investiga..."
2012,Code querying by UML,"Noguera, C. ; De Roover, C. ; Kellens, A. ; Jonckers, V.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240492,"The need to identify source code that exhibits particular characteristics is essential to program comprehension. In this paper we introduce Arabica, a tool for querying Java code using UML class and sequence diagrams. Our use of UML diagrams avoids the need for developers to familiarize themselves with yet another language. In contrast to tools that rely on dedicated query languages, Arabica encod..."
2012,CriticAL: A critic for APIs and libraries,"Rupakheti, C.R. ; Daqing Hou",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240493,"It is well-known that APIs can be hard to learn and use. Although search tools can help find related code examples, API novices still face other significant challenges such as evaluating the relevance of the search results. To help address the broad problems of finding, understanding, and debugging API-based solutions, we have built a critic system that offers recommendations, explanations, and cr..."
2012,Supporting comprehension experiments with human subjects,"Feigenspan, J. ; Siegmund, N.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240494,"Experiments with human subjects become more and more important in software engineering. To support planning, conducting, and replicating experiments targeting program comprehension, we developed PROPHET. It allows experimenters to easily define and customize experimental settings as well as to export settings such that others can replicate their results. Furthermore, PROPHET provides extension poi..."
2012,SeByte: A semantic clone detection tool for intermediate languages,"Keivanloo, I. ; Roy, C.K. ; Rilling, J.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240495,SeByte is a semantic clone detection tool which accepts Java bytecode (binary) as input. SeByte provides a complementary approach to traditional pattern-based source code level clone detection. It is capable of detecting clones missed by existing clone detection tools since it exploits both pattern and content similarity at binary level.
2012,CRat: A refactoring support tool for Form Template Method,"Hotta, K. ; Higo, Y. ; Igaki, H. ; Kusumoto, S.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240496,"Refactoring is important for efficient software maintenance. However, manual operations for refactoring are complicated, and human-related errors easily occur. Tool support can help users to apply such a complicated refactoring. This paper proposes a refactoring support tool with Form Template Method pattern. The developed tool automatically identifies method pairs that can be refactored with Form..."
2012,Toward structured location of features,"Kazato, H. ; Hayashi, S. ; Okada, S. ; Miyata, S. ; Hoshino, T. ; Saeki, M.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240497,"This paper proposes structured location, a semiautomatic technique and its supporting tool both for locating features and exposing their structures in source code, using a combination of dynamic analysis, sequential pattern mining and formal concept analysis."
2012,Extraction and improvement of conditionally compiled product line code,Bo Zhang,http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240498,"Conditional Compilation (CC) is one of the most widely used variation mechanisms in the development of software product lines (SPLs). However, a problem in SPL maintenance is that conditionally compiled code blocks are often overly scattered, nested, and tangled, which makes the code difficult to understand. Moreover, if variant code is evolved independently of the corresponding variability model,..."
2012,Applying bioinformatics in the analysis of software variants,"Tenev, V.L. ; Duszynski, S.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240499,"Analysis of software similarity is a lively research topic, particularly in the context of software maintenance and software reuse. There exist several approaches to detecting similar code inside one software system and across many systems. While working on similarity analysis of software variants, we observed many analogies between the approaches for analyzing evolution of software and of biologi..."
2012,Parallel code clone detection using MapReduce,"Sajnani, H. ; Ossher, J. ; Lopes, C.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240500,"Code clone detection is an established topic in software engineering research. Many detection algorithms have been proposed and refined but very few exploit the inherent parallelism present in the problem, making large scale code clone detection difficult. To alleviate this shortcoming, we present a new technique to efficiently perform clone detection using the popular MapReduce paradigm. Prelimin..."
2012,Automatic software architecture recovery: A machine learning approach,"Sajnani, H.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240501,"Automatically recovering functional architecture of the software can facilitate the developer's understanding of how the system works. In legacy systems, original source code is often the only available source of information about the system and it is very time consuming to understand source code. Current architecture recovery techniques either require heavy human intervention or fail to recover q..."
2012,Toward an effective automated tracing process,"Mahmoud, A.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240502,The research on automated tracing has noticeably advanced in the past few years. Various methodologies and tools have been proposed in the literature to provide automatic support for establishing and maintaining traceability information in software systems. This movement is motivated by the increasing attention traceability has been receiving as a de jure standard in software quality assurance. Fo...
2012,Characterization of the Linux configuration system,"Jbara, A.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240503,"Variability in software systems is often expressed using the C pre-processor (CPP). However, CPP has been identified as problematic. We argue that CPP is not as bad as its reputation suggests, and indeed many large systems use it effectively. We perform a deep analysis of the Linux configuration options, and find significant inconsistencies between the source code and the configuration control sys..."
2012,Leveraging clone detection for Internet-scale source code search,"Keivanloo, I.",http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6240504,"Different approaches to search for source code on the Internet exist. In this paper, we propose techniques that support a special type of Internet-scale code search using two novel syntactical and semantic clone search and detection methods. The syntactical search focuses on providing a scalable real-time engine, while the semantic clone detection is being used to enrich our knowledge base during ..."
